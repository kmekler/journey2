<!DOCTYPE html>
<html>
  <head>    
    <style>
      html, body, #map-canvas {
        
        height: 80%;
        margin: 0px;
        padding: 0px;
      }
    </style>
    <script src="https://maps.googleapis.com/maps/api/js?v=3.exp"></script>
    <script>
    
    // In the following example, markers appear when the user clicks on the map.
    // The markers are stored in an array.
    // The user can then click an option to hide, show or delete the markers.
    var geocoder;
    var map;
    var markers = [];
    var infowindows = [];

    function initialize() {

    geocoder = new google.maps.Geocoder();
    var genAssembly = new google.maps.LatLng(34.012982, -118.495186);
    var mapOptions = {
      zoom: 12,
      center: genAssembly,
      mapTypeId: google.maps.MapTypeId.TERRAIN
    };
    map = new google.maps.Map(document.getElementById('map-canvas'),
        mapOptions);

    // This event listener will call addMarker() when the map is clicked.
    google.maps.event.addListener(map, 'click', function(event) {
      addMarker(event.latLng);
    });

    // Adds a marker at the center of the map.
    addmarker = new google.maps.Marker({
              position: genAssembly,
              map: map
     });
  
    var markers  = <%= @markers.to_json.html_safe %>;
    
    console.log(markers);
    
    for (var i = 0; i < markers.length; i++) {
        //Add to marker
        var marker = new google.maps.LatLng(markers[i].latitude,markers[i].longitude);
        addmarker = new google.maps.Marker({
          position: marker,
          map: map
        });
    }   
}
  
// Add a marker to the map and push to the array.
function addMarker(location) {

      
  var newMarker = new google.maps.Marker({
    position: location,
    map: map
  });
  // markers.push(marker);

  var contentString = '<div id="content">'+
      '<div id="siteNotice">'+
      '</div>'+
      '<h1 id="firstHeading" class="firstHeading">Uluru</h1>'+
      '<div id="bodyContent">'+
      '<p><b>Uluru</b>, also referred to as <b>Ayers Rock</b>, is a large ' +
      'sandstone rock formation in the southern part of the '+
      'Northern Territory, central Australia. It lies 335&#160;km (208&#160;mi) '+
      'south west of the nearest large town, Alice Springs; 450&#160;km '+
      '(280&#160;mi) by road. Kata Tjuta and Uluru are the two major '+
      'features of the Uluru - Kata Tjuta National Park. Uluru is '+
      'sacred to the Pitjantjatjara and Yankunytjatjara, the '+
      'Aboriginal people of the area. It has many springs, waterholes, '+
      'rock caves and ancient paintings. Uluru is listed as a World '+
      'Heritage Site.</p>'+
      '<p>Attribution: Uluru, <a href="http://en.wikipedia.org/w/index.php?title=Uluru&oldid=297882194">'+
      'http://en.wikipedia.org/w/index.php?title=Uluru</a> '+
      '(last visited June 22, 2009).</p>'+
      '</div>'+
      '</div>';

  var infowindow = new google.maps.InfoWindow({
      content: contentString
      });

  google.maps.event.addListener(newMarker, 'click', function() {
        infowindow.open(map,newMarker);
      }); 
  // console.log(markers);
 
  $(document).ready(function(){
        $("#newMarker_field").val(markers);


  });

  // make an api call to your server and send markers back
  $.post("/markers", {lat: newMarker.position.lat(), lng: newMarker.position.lng()},
     function(data){
      if (newMarker > 1)
      console.log(data);

     });

 
}



// Sets the map on all markers in the array.
function setAllMap(map) {
  for (var i = 0; i < markers.length; i++) {
    markers[i].setMap(map);
  }
}

// Removes the markers from the map, but keeps them in the array.
function clearMarkers() {
  setAllMap(null);
}

// Shows any markers currently in the array.
function showMarkers() {
  setAllMap(map);
}

// Deletes all markers in the array by removing references to them.
function deleteMarkers() {
  clearMarkers();
  markers = [];
}

function codeAddress(){
  var address = document.getElementById('address').value;
  if(address.length > 0){
    geocoder.geocode({'address': address},function(results, status){
      if(status == google.maps.GeocoderStatus.OK){
        map.setCenter(results[0].geometry.location);
        var marker = new google.maps.Marker({
          map: map,
          position: results[0].geometry.location
        });
        markers.push(marker);
      } else {
        alert("Geocode was not successful for the following reason: " + status);
      }
    });
  } else {
    alert("Search field can't be blank");

  }

}


google.maps.event.addDomListener(window, 'load', initialize);

    </script>

    <script type="text/javascript" src="https://www.google.com/jsapi"></script>
    
    <script type="text/javascript">
      google.load("visualization", "1", {packages:["corechart"]});
      google.setOnLoadCallback(drawChart);
      function drawChart() {

      var data = google.visualization.arrayToDataTable([
        ['Date', 'Mood', 'Weather', 'Food'],
        ['11/23/2014', 4, 2, 9]
      ]);

      var options = {
        title: 'Run Performance',
        hAxis: {title: 'Date', titleTextStyle: {color: 'red'}}
      };

      var chart = new google.visualization.ColumnChart(document.getElementById('chart_div'));
        chart.draw(data, options);
      }


    </script>
    
  </head>
  <body class="background">
    <h1>Running Locations</h1>
    <div id="panel">
      <button onclick="clearMarkers();" value="Hide Markers" >Clear Markers</button><br>
      <button onclick="showMarkers();" value="Show All Markers">Show Markers</button><br>
      <button onclick="deleteMarkers();" value="Delete Markers">Delete Markers</button><br>
    </div>  
    
    <!-- google map div ID -->
    <div id="map-canvas"></div>

    
    <%=link_to 'send back', journal_path(:id=>"marker_field") %>
    
	<div class="body">
		<div class="text">

			<% @journals.each do |journal| %>
				<center><p><%= link_to 'see more', journal_path(journal) %></p></center>
			<% end %>
		</div>
	</div>	

  </body>
</html>